# Master Node Setup

(OPT) Add empty ssh.txt file to boot partition before startup.
Replace /etc/dchpcd.conf with modified v.
Replace /etc/hosts with modified v. >> Add aberfwd04
Replace /etc/network/interfaces with modified v.
Manually configure aberfwd04 to connect to master pi (previous setup involved aberfwd receiving ipaddr from master pi) Run share_internet.sh >> pi now has internet connection
rpi-update and apt update/upgrade
Sudo apt-get install dnsmasq
Replace /etc/dnsmasq.conf with modified v. >> Reboot
DCHP not working - /etc/network/interfaces specifies static ip addresses
DNS fails - can ping ipaddrs 8.8.8.8 but not domain names
Edit /etc/dnsmasq.conf >> uncomment no-resolv >> specify nameservers manually
Edit etc/modules to include ipv6
sudo service rpcbind start and install nfs-kernel-server

# Slave Node Setup 
Slave1
Add ssh.txt to boot d
Update /etc/hosts with ipaddrs of other Pis
rpi-update and apt update/upgrade
(ONLY ONCE)
transplant fs of slave1 to master1 via rsync (see slave1share) 
(may have to 'PermitRootLogin yes' in /etc/ssh/sshd_config >>> service ssh reload)

# Master1
Edit /etc/exports to expose /nfs/slave1 to 10.0.0.0/24(rw,root_squash,nohide,insecure,no_subtree_check,async)
Install mpich, zlib1g, zlib1g-dev and libxml2-dev

# Slave1

Fix errors resulting from network boot
etc/systemd/journald.conf, system.conf /lib/systemd/system unmarked executable chmod og-w chmod a-x only on files
Network Time Synchronisation failed? NTP server? Install NTP on slave
Dependencies failed for /boot, Local Filesystems and check on dev/mmcblkp0 >> mispelled name
Disabled bluetooth
Add /home nfs export from master to slave
Mount /tmp as /tmpfs on slave
sudo mount / -o remount,rw
Install mpich, zlib1g etc.

# Master

Install Slurm-Controller (slurm-wlm)
Edit slurm.conf, or replace with alt. version >> move to shared storage
Systemctl enable & start munge, slurmd, slurmctld

# Slave

Install slurmd slurm-client
Munge.service start fails - cannot access logfile - permission denied - even as root when chmod 777?
Munge is now controlled by systemd - /etc/default/munge & /etc/init.d/munge no longer used
"* `systemctl edit --system --full munge`
  This command will perform the following actions:
  
  1. Copy `munge.service` to `/etc/systemd/system/munge.service`
  2. Invoke an editor on this new `munge.service` file
  3. Reload the systemd configuration afterwards
  
  While in the editor, append either `--syslog` or `--force` to the `ExecStart` line:
  ```
  ExecStart=/usr/sbin/munged --syslog
  ```
  If `munge.service` is instead manually edited, a `systemctl daemon-reload` will be necessary to reload the systemd configuration afterwards.
* `systemctl enable munge`
  This command will enable the service at boot.
* `systemctl start munge`"
Fixed issue - new issue - PIDfile insecure - group writable permission set on root?

Edit slurm.conf - point at /tmp/slurmd.log


## Directories which need writing to

/var/log
/var/lib/slurm-llnl/slurmd
/var/lib/slurm-llnl/checkpoint
/var/lib/slurm-llnl/slurmctld


## Sorting out permissions

sudo chmod o-r /etc/ssh/ssh_host_ecdsa_key
sudo chmod o-r /etc/ssh/ssh_host_ed25519_key
sudo chmod a-x *
sudo chmod o-r *_key

cd /nfs/slave1/usr/lib/systemd/user/
sudo chmod -x *.target
sudo chmod -x *.service

## Enabling a node after reboot

sudo scontrol update NodeName=slave2 state=resume


# Setting up user software

## Setting up mpi4py

sudo apt install python3-pip

pip3 install --user mpi4py


# NFS issues
issues with home directory not mounting, changed fstab to:

10.0.0.10:/home /home   nfs     relatime,vers=3,nolock,proto=udp,timeo=11,retrans=3     0       2



# Networking issues

There needs to be a correct and working NTP server on the network. If not nodes may have time sync issues which can break slurm and NFS.

DNSmasq configured to not give default route to non-raspberry pi machines that were often laptops connecting with their own wifi.

#set default route
dhcp-option=3
dhcp-option=6
dhcp-option=tag:client_is_a_pi,3,10.0.0.1
dhcp-option=tag:client_is_a_pi,6,10.0.0.10
#set NTP server
dhcp-option=tag:client_is_a_pi,option:ntp-server,10.0.0.10

If anything is present in /etc/network/interfaces the network GUI stops working. Static IPs can be specified in /etc/dhcpcd.conf instead of /etc/network/interfaces if you want to keep the GUI applet working.


## Wifi access point

If the master is a Pi3 or better (or has a USB wifi dongle) it can act as a wifi access point. This is a useful way for people to login.

sudo apt install hostapd bridge-utils

in /etc/default/hostapd set the path to the config:

	DAEMON_CONF="/etc/hostapd/hostapd.conf"

create a hostapd config

#/etc/hostapd/hostapd.conf
	country_code=GB
	interface=wlan0
	driver=nl80211
	bridge=br0
	ssid=MySSID
	hw_mode=g
	channel=2
	ieee80211n=1
	wmm_enabled=0

	ht_capab=[HT40][SHORT-GI-20][DSSS_CK-40]
	macaddr_acl=0

	auth_algs=1

	ignore_broadcast_ssid=0

	wpa=2
	wpa_key_mgmt=WPA-PSK

	wpa_passphrase=password
	rsn_pairwise=CCMP
	ctrl_interface=/var/run/hostapd


The hostapd service is masked by default, unmask it with:

	sudo systemctl unmask hostapd

Enable it to run after reboot

	sudo systemctl enable hostapd

Start it

	sudo systemctl start hostapd



Now we need to bring up the bridge interface and assign an IP address to it. This should be the same IP we were giving to the ethernet interface. The ethernet interface doesn't need to have an IP directly 
assigned now. 

#/etc/network/interfaces
	auto br0
	iface br0 inet static
		address 10.0.0.10
		netmask 255.255.255.0
		gateway 10.0.0.1
	    bridge_ports eth0 wlan0
	    bridge_fd 0
	    pre-up service hostapd start


Bring up the new network config

sudo service networking restart

Using this will break the lxde network management applet as dhcpcd won't start and the GUI talks to dhcpcd. 




# Linpak

https://epcced.github.io/wee_archlet/#bench

/usr/bin/ld: /usr/lib/arm-linux-gnueabihf/libmpich.a(lib_libmpich_la-mpiu_thread_posix.o): undefined reference to symbol 'pthread_create@@GLIBC_2.4'
//lib/arm-linux-gnueabihf/libpthread.so.0: error adding symbols: DSO missing from command line


# Adding users

You'll have to create a accounts for users on both the master and (one of) the workers. 

Don't manually copy /etc/passwd from the master to the workers. Their files are NOT identical. You will have to create the accounts twice or copy the relevant part of /etc/passwd. 
Password based SSH logins to nodes can be prevented by not copying the shadow entires of new users. 

# Quotas

##setting up

sudo apt install quota
sudo service quota start


(using an external USB hard disk on /dev/sda1)
 sudo mount /dev/sda1 /home -o usrquota,grpquota
 
 sudo quotacheck -ugm /home

 
 sudo quotaon /home

### check quota
 quota -vs

 ##manually mounting
 
  sudo mount /dev/sda /home -o usrquota,grpquota
  sudo quotaon /home
  
  home filesystem UUID bb6deaa6-d9ea-4472-bbd7-88b055db9a47


# Providing external access through an SSH tunnel

Use this if you want people to be able to SSH into the pi cluster when its behind a NAT router etc.

On the pi cluster:

ssh <user>@<hostname> -R 0.0.0.0:2000:localhost:22


This will bind port 2000 on <hostname> to port 22 on the cluster. You might need to add GatewayPorts = yes to your SSHD config in /etc/ssh/sshd_config on the external host.


# Loadable modules


Install modules:

    sudo apt install environment-modules

Install Python as a module, libffi-dev is needed to build it:

    sudo apt install libffi-dev libssl-dev build-essential
    wget https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz
    tar xvfz Python-3.7.0.tgz 
    cd Python-3.7.0/
    sudo ./configure --prefix=/usr/share/modules/Modules/python/3.7.0 --with-ssl
    make -j4
    sudo make install

## Installing pip packages systemwide

    sudo -s
    . /etc/profile.d/modules.sh 
    module load python
    pip3 install cython

The version of numpy from pypi is precompiled with a version of Glibc that was incompatible with my install. Build it from source instead, cython is needed first (see above).

Numpy also prefers to have a linear algebra library installed such as lapack.


    apt-install liblapack3 libatlas-base-dev

Get numpy source code and build:
 
    wget https://github.com/numpy/numpy/releases/download/v1.17.4/numpy-1.17.4.tar.gz
    tar xvfz numpy-1.17.4.tar.gz
    python setup.py build -j 4 install --prefix /usr/share/modules/Modules/python/3.7.0/
    
    
Install other useful pip packages:

   pip3 install matplotlib
   

Setup worker nodes:

    ssh worker00
    sudo mount / -o remount,rw
    sudo apt install environment-modules
    exit
    
    sudo mkdir -p /nfs/slave1/usr/share/modules/Modules/python/
    sudo cp -r /usr/share/modules/Modules/python/3.7.0 /nfs/slave1/usr/share/modules/Modules/python/


# Things to do on boot

Enable quotas

   sudo quotaon /home

If thereâ€™s an error about not finding /dev/root

   sudo ln -s /dev/mmcblk0p2 /dev/root


* Check internet access, check time is correct for NTP
* boot nodes
* Enable nodes:
    sudo scontrol update NodeName=worker[00-09] state=resume

